
#set($path = '/reports/res')

<html>
		<head>
		<title>Automation Test Execution Report</title>
	<link rel='stylesheet' type='text/css' href='$path/CSS/styles.css'/>
	<script src='$path/JS/amcharts.js' type='text/javascript'></script>
	<script type="text/javascript">
		function pieChartFunc(valPass, valFail, valSkipped, valNE)
		{
		var chartData=[{
			result: 'Pass',
			value: valPass},
		{
			result: 'Fail',
			value: valFail},
		{
			result: 'Skipped',
			value: valSkipped},
		{
			result: 'Not Executed',
			value: valNE}
		];
		
		AmCharts.ready(function() {
   	 	// PIE chart for function
		var chart=new AmCharts.AmPieChart();
		chart.dataProvider=chartData;
		chart.titleField='result';
		chart.valueField='value';
		chart.fontFamily='Geneva';
		chart.outlineColor='#FFFFFF';
		chart.outlineAlpha=0.8;
		chart.outlineThickness=2;
		chart.minRadius=120;
		chart.labelRadius=10;
		chart.colors=["#1E90FF", "#FF4500", "#2F4F4F", "#C71585"];
		// this makes the chart 3D
		chart.depth3D=15;
		chart.angle=30;
		// WRITE
		chart.write('chartFunc');
		});
		}
		
		//STACKED BAR chart for trend
		function stackBarFuncTrend(funcTrendArray)
		{
		var chartData=[];
		var len=funcTrendArray.length;
		for(var i=0; i<len; i++)
		{
		var obj={
		trendDate: funcTrendArray[i][0],
		pass: funcTrendArray[i][1],
		fail: funcTrendArray[i][2],
		skipped: funcTrendArray[i][3],
		ne: funcTrendArray[i][4]
		};
		chartData.push(obj);
		} 
		
		AmCharts.ready(function() {
	    // SERIAL CHART
	    chart=new AmCharts.AmSerialChart();
	    chart.dataProvider=chartData;
	    chart.fontFamily='Geneva';
	    chart.fontSize=8;
	    chart.categoryField='trendDate';
	    chart.plotAreaBorderAlpha=0.1;
	    chart.columnWidth=0.2;
	    chart.rotate=true;
	
	    // AXES
	    // Category
	    var categoryAxis=chart.categoryAxis;
	    categoryAxis.gridAlpha=0.1;
	    categoryAxis.axisAlpha=0;
	    categoryAxis.gridPosition='start';
	
	    // value                      
	    var valueAxis=new AmCharts.ValueAxis();
	    valueAxis.stackType='regular';
	    valueAxis.gridAlpha=0.1;
	    valueAxis.axisAlpha=0;
	    valueAxis.maximum=100;
        valueAxis.unit='%';
        chart.addValueAxis(valueAxis);
	
	    // GRAPHS
	    // firstgraph
	    var graph=new AmCharts.AmGraph();
	    graph.title='Pass';
	    //graph.labelText='[[value]]';
	    graph.balloonText='%Pass: [[value]]';
	    graph.valueField='pass';
	    graph.type='column';
	    graph.lineAlpha=0;
	    graph.fillAlphas=1;
	    graph.lineColor='#1E90FF';
	    chart.addGraph(graph);
	
	    // second graph                              
	    graph=new AmCharts.AmGraph();
	    graph.title='Fail';
	    //graph.labelText='[[value]]';
	    graph.balloonText='%Fail: [[value]]';
	    graph.valueField='fail';
	    graph.type='column';
	    graph.lineAlpha=0;
	    graph.fillAlphas=1;
	    graph.lineColor='#FF4500';
	    chart.addGraph(graph);
	    
	    // third graph                              
	    graph=new AmCharts.AmGraph();
	    graph.title='Skipped';
	    //graph.labelText='[[value]]';
	    graph.balloonText='%Skipped: [[value]]';
	    graph.valueField='skipped';
	    graph.type='column';
	    graph.lineAlpha=0;
	    graph.fillAlphas=1;
	    graph.lineColor='#2F4F4F';
	    chart.addGraph(graph);
	    
	    // fourth graph                              
	    graph=new AmCharts.AmGraph();
	    graph.title='Not Executed';
	    //graph.labelText='[[value]]';
	    graph.balloonText='%Not Executed: [[value]]';
	    graph.valueField='ne';
	    graph.type='column';
	    graph.lineAlpha=0;
	    graph.fillAlphas=1;
	    graph.lineColor='#C71585';
	    chart.addGraph(graph);
	    
	    // WRITE
	    chart.write('chartFuncTrend');
		});
		}
		
		//Stacked column chart for features
		function stackColFeat(featChartArray)
		{
		var chartData=[];
		var len=featChartArray.length;
		for(var i=0; i<len; i++)
		{
		var obj={
		feature: featChartArray[i][0],
		pass: featChartArray[i][1],
		fail: featChartArray[i][2],
		skipped: featChartArray[i][3],
		ne: featChartArray[i][4]
		};
		chartData.push(obj);
		} 
		
		AmCharts.ready(function() {
		// SERIAL CHART
		len=chartData.length;
		var chart=new AmCharts.AmSerialChart();
		chart.dataProvider=chartData;
		chart.categoryField='feature';
		chart.fontFamily='Geneva';
		chart.fontSize=8;
		chart.startDuration=1;
		chart.plotAreaFillAlphas=0.2;
		if(len<5)
		{
		chart.columnWidth=0.1;
		}
		else
		{
		chart.columnWidth=0.2;
		}
		// the following two lines makes chart 3D
		chart.angle=30;
		chart.depth3D=40;
	
		// AXES
		// category
		var categoryAxis=chart.categoryAxis;
		categoryAxis.gridAlpha=0.2;
		categoryAxis.gridPosition='start';
		categoryAxis.axisColor='#DADADA';
		categoryAxis.axisAlpha=1;
		categoryAxis.dashLength=5;
		categoryAxis.labelRotation=10
		
		// value
		var valueAxis=new AmCharts.ValueAxis();
		valueAxis.stackType='3d'; // This line makes chart 3D stacked (columns are placed one behind another)
		valueAxis.gridAlpha=0.2;
		valueAxis.axisColor='#DADADA';
		valueAxis.axisAlpha=1;
		valueAxis.dashLength=5;
		valueAxis.minimum=0;
		valueAxis.maximum=100;
		valueAxis.unit='%';
		chart.addValueAxis(valueAxis);
	
		// GRAPHS
		// first graph
		var graph1=new AmCharts.AmGraph();
		graph1.title='Not Executed';
		graph1.valueField='ne';
		graph1.type='column';
		graph1.lineAlpha=0;
		graph1.lineColor='#C71585';
		graph1.fillAlphas=1;
		graph1.balloonText='%Not Executed: [[value]]';
		chart.addGraph(graph1);
		
		// second graph
		var graph2=new AmCharts.AmGraph();
		graph2.title='Skipped';
		graph2.valueField='skipped';
		graph2.type='column';
		graph2.lineAlpha=0;
		graph2.lineColor='#2F4F4F';
		graph2.fillAlphas=1;
		graph2.balloonText='%Skipped: [[value]]';
		chart.addGraph(graph2);
		
		// third graph
		var graph3=new AmCharts.AmGraph();
		graph3.title='Fail';
		graph3.valueField='fail';
		graph3.type='column';
		graph3.lineAlpha=0;
		graph3.lineColor='#FF4500';
		graph3.fillAlphas=1;
		graph3.balloonText='%Fail: [[value]]';
		chart.addGraph(graph3);
		        
		// fourth graph
		var graph4=new AmCharts.AmGraph();
		graph4.title='Pass';
		graph4.valueField='pass';
		graph4.type='column';
		graph4.lineAlpha=0;
		graph4.lineColor='#1E90FF';
		graph4.fillAlphas=1;
		graph4.balloonText='%Pass: [[value]]';
		chart.addGraph(graph4);
		
		chart.write('chartFeat');
		});
		}
		</script>    
	</head>
	<body>
	
	
	<table class='tableReport'>
		<tr><td>
		<table class='tableBanner'>
		<tr><td align='center'><h1>Automation Test Execution Report</h1></td></tr>
		</table>
		<hr>
		</td></tr>
		<tr><td>
<table class='tableFuncSummary'>
		<tr><th class='thFuncSummary'>Functionality Summary</th></tr>
		</table>
		<table class='tableFeatSummary'>
		<tr class='trBg'>
		<th class='tdBorderSummary' width='10%'>Functionality Name</th>
		<th class='tdBorderSummary' width='10%'>Total No. of Cases</th>
		<th class='tdBorderSummary' width='10%'>Not Executed</th>
		<th class='tdBorderSummary' width='10%'>Executed</th>
		<th class='tdBorderSummary' width='10%'>Pass</th>
		<th class='tdBorderSummary' width='10%'>Fail</th>
		<th class='tdBorderSummary' width='10%'>Skipped</th>
		<th class='tdBorderSummary' width='7%'>% Pass</th>
		<th class='tdBorderSummary' width='7%'>% Fail</font></th>
		<th class='tdBorderSummary' width='8%'>% Skipped</th>
		<th class='tdBorderSummary' width='8%'>% Not Executed</th>
		</tr>
<tr>
<td class='tdBorderSummaryLeft'>$functionalList.getFunctionalName()</td>
<td class='tdBorderSummary'>$functionalList.getTotalCount()</td>
<td class='tdBorderSummary'>$functionalList.getNotExecutedCount()</td>
<td class='tdBorderSummary'>$functionalList.getExecutedCount()</td>
<td class='tdCaseSummaryPassVal'>$functionalList.getPassCount()</td>
<td class='tdCaseSummaryFailVal'>$functionalList.getFailCount()</td>
<td class='tdCaseSummarySkipVal'>$functionalList.getSkipCount()</td>
<td class='tdCaseSummaryPassVal'>$functionalList.getPercentagePassCount()</td>
<td class='tdCaseSummaryFailVal'>$functionalList.getPercentageFailCount()</td>
<td class='tdCaseSummarySkipVal'>$functionalList.getPercentageSkipCount()</td>
<td class='tdCaseSummaryNEVal'>$functionalList.getPercentageNotExecuted()</td>
</tr>



<script type='text/javascript'> 
		pieChartFunc( $functionalList.getPassCount() , $functionalList.getFailCount() , $functionalList.getSkipCount() , $functionalList.getNotExecutedCount()); 
		stackColFeat([
		#foreach($steps in $SuitRslt)
		['$steps.getSuiteName()', $steps.getPercentagePassCount() ,$steps.getPercentageFailCount() ,$steps.getPercentageSkipCount() ,$steps.getPercentageNotExecuted()],
		#end
		]);
		</script>

		<table width='100%'>
		<tr><td id='chartFunc' width='42%' height='260px'></td><td id='chartFeat' width='58%'></td></tr>
		</table>
	
	<table class='tableFuncSummary'>
		<tr><th class='thFuncSummary'>Test-bed Summary</th></tr>
		</table>
		<table class='tableFeatSummary'>
		<tr class='trBg'>
		<th class='tdBorderSummary'>Test Execution Id</th>
		<th class='tdBorderSummary'>Test Suite Name</th>
		<th class='tdBorderSummary'>Machine Id</th>
		<th class='tdBorderSummary'>OS</th>
		<th class='tdBorderSummary'>Build Version</th>
		<th class='tdBorderSummary'>Status</th>
		<th class='tdBorderSummary'>Date</th>
		<th class='tdBorderSummary'>Duration</th>
		</tr>
		#foreach($steps in $SuitRslt)
		<tr>
		#if(( $steps.getSuiteId()))
		<td class='tdBorderSummary'>$steps.getSuiteId()</td>
		#else
		<td class='tdBorderSummary'></td>
		#end
		
		<td class='tdBorderSummary'>$steps.getSuiteName()</td>
		<td class='tdBorderSummary'>$agentName.getAgentName()</td>
		<td class='tdBorderSummary'>$agentName.getAgentOS()</td>
		<td class='tdBorderSummary'>Merlin6t</td>
		<td class='tdCaseSummaryPassVal'>$steps.getSuitSatus()</td>
		<td class='tdBorderSummary'>$Date</td>
		<td class='tdBorderSummary'>$steps.getTimeDuration()</td>
		</tr>
		#end
	</table>
	
	<br><br><table class='tableFuncSummary'>
		<tr><th class='thFuncSummary'>Feature wise Summary&nbsp;<font size='1' color='#9966FF'>(**Pre-requisite/Miscellaneous test case count is not considered in Feature wise Summary)</font></th></tr>
		</table>
		<table class='tableFeatSummary'>
		<tr class='trBg'>
		<th class='tdBorderSummary'>Test Execution Id</th>
		<th class='tdBorderSummary'>Function</th>
		<th class='tdBorderSummary'>Feature Name</th>
		<th class='tdBorderSummary'>No. of Cases</th>
		<th class='tdBorderSummary'>Not Executed</th>
		<th class='tdBorderSummary'>Executed</th>
		<th class='tdBorderSummary'>Pass</th>
		<th class='tdBorderSummary'>Fail</th>
		<th class='tdBorderSummary'>Skipped</th>
		<th class='tdBorderSummary'>% Pass</th>
		<th class='tdBorderSummary'>% Fail</th>
		<th class='tdBorderSummary'>% Skipped</th>
		<th class='tdBorderSummary' width='8%'>% Not Executed</th>
		</tr>
		#foreach($steps in $SuitRslt)
		#set($testCaseTableName = $steps.getSuiteName()+'_'+$agentName.getAgentName()+'.html')
		
		<tr>
		#if(( $steps.getSuiteId()))
		<td class='tdBorderSummaryLeft'>$steps.getSuiteId()</td>
		#else
		<td class='tdBorderSummaryLeft'></td>
		#end
		<td class='tdBorderSummaryLeft'>$functionalList.getFunctionalName()</td>
		<td class='tdBorderSummaryLeft'><a href=$testCaseTableName#preReqLink target="testCaseTable">$steps.getSuiteName()</a></td>
		<td class='tdBorderSummary'>$steps.getTotalCount()</td>
		<td class='tdBorderSummary'>$steps.getNotExecuted()</td>
		<td class='tdBorderSummary'>$steps.getExecuted()</td>
		<td class='tdCaseSummaryPassVal'>$steps.getPassCount()</td>
		<td class='tdCaseSummaryFailVal'>$steps.getFailCount()</td>
		<td class='tdCaseSummarySkipVal'>$steps.getSkipCount()</td>
		<td class='tdCaseSummaryPassVal'>$steps.getPercentagePassCount()</td>
		<td class='tdCaseSummaryFailVal'>$steps.getPercentageFailCount()</td>
		<td class='tdCaseSummarySkipVal'>$steps.getPercentageSkipCount()</td>
		<td class='tdCaseSummaryNEVal'>$steps.getPercentageNotExecuted()</td>
		</tr>
		#end
		</table>
	
	<br><br><table class='tableFuncSummary'><tr><th class='thFuncSummary'>Test Case Summary  <font size='1' color='#9966FF'>
$functionalList.getFunctionalName() Reports</font></th></tr></table>

 <iframe frameborder="0" scrolling="yes" width="100%" height="200" src="$testCaseTableName" name="testCaseTable" id="testCaseTable">
   <p>iframes are not supported by your browser.</p>


	
	</td>
	</tr>
	</table>
	 </iframe><br />
<table class='tableFooter'><tr><td class='tdFooter'>Framework Version 3.2</td><tr></table>
	</body>
	
</html>