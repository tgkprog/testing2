-- Generated by Oracle SQL Developer Data Modeler 3.3.0.747
--   at:        2013-10-22 12:35:39 GMT+05:30
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE TABLE Actions
  (
    ActionID NUMBER NOT NULL ,
    ActionName NVARCHAR2 (50) NOT NULL ,
    Description NVARCHAR2 (200) ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
ALTER TABLE Actions ADD CONSTRAINT Action_PK PRIMARY KEY
(
  ActionID
)
;

CREATE TABLE AgentDetails
  (
    AgentID NUMBER NOT NULL ,
    AgentName NVARCHAR2 (50) NOT NULL ,
    IP NVARCHAR2 (20) ,
    Port NUMBER ,
    MachineDetails NVARCHAR2 (100) ,
    Instance NVARCHAR2 (50) ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
CREATE INDEX AgectDetails_TestPlan_FK ON AgentDetails
  ( AgentID ASC
  ) ;
ALTER TABLE AgentDetails ADD CONSTRAINT AgectDetails_PK PRIMARY KEY
(
  AgentID
)
;

CREATE TABLE AppFeature
  (
    FeatureID NUMBER NOT NULL ,
    FeatureName NVARCHAR2 (50) NOT NULL ,
    Description NVARCHAR2 (200) ,
    FunctionalID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
ALTER TABLE AppFeature ADD CONSTRAINT Feature_PK PRIMARY KEY
(
  FeatureID
)
;

CREATE TABLE AppFunctionality
  (
    FunctionalID NUMBER NOT NULL ,
    FunctionalName NVARCHAR2 (50) NOT NULL ,
    Description NVARCHAR2 (200) ,
    AppID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
ALTER TABLE AppFunctionality ADD CONSTRAINT Functional_PK PRIMARY KEY
(
  FunctionalID
)
;

CREATE TABLE Application
  (
    AppID NUMBER NOT NULL ,
    AppName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE Application ADD CONSTRAINT APPLICATION_PK PRIMARY KEY
(
  AppID
)
;

CREATE TABLE ConditionGroup
  (
    ConditionGroupID NUMBER NOT NULL ,
    ConditionGroupName NVARCHAR2 (50) NOT NULL ,
    Description NVARCHAR2 (200) ,
    AppID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE ConditionGroup ADD CONSTRAINT ConditionGroup_PK PRIMARY KEY
(
  ConditionGroupID
)
;

CREATE TABLE Conditions
  (
    ConditionID NUMBER NOT NULL ,
    ConditionName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    Expression NVARCHAR2 (500) ,
    ConditionGroupID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE Conditions ADD CONSTRAINT Condition_PK PRIMARY KEY
(
  ConditionID
)
;

CREATE TABLE GenericData
  (
    ID NUMBER NOT NULL ,
    KeyName NVARCHAR2 (200) ,
    Value NVARCHAR2 (200)
  ) ;
ALTER TABLE GenericData ADD CONSTRAINT GenericData_PK PRIMARY KEY
(
  ID
)
;

CREATE TABLE IdentifierType
  (
    IdentifierTypeID NUMBER NOT NULL ,
    IndentifierTypeName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    AppID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE IdentifierType ADD CONSTRAINT IdentifierType_PK PRIMARY KEY
(
  IdentifierTypeID
)
;

CREATE TABLE LaneResults
  (
    TestRunID      NUMBER NOT NULL ,
    ScheduleLaneID NUMBER NOT NULL ,
    AgentID        NUMBER NOT NULL ,
    BuildVersion NVARCHAR2 (200) ,
    OS NVARCHAR2 (200) ,
    Status NVARCHAR2 (100) ,
    FailureDetails NVARCHAR2 (200) ,
    CreatedBy NVARCHAR2 (200) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE LaneResults ADD CONSTRAINT DDTLaneResults_PK PRIMARY KEY
(
  TestRunID
)
;

CREATE TABLE ObjectGroup
  (
    ObjectGroupID NUMBER NOT NULL ,
    ObjectGroupName NVARCHAR2 (200) NOT NULL ,
    Description NVARCHAR2 (200) ,
    AppID    NUMBER NOT NULL ,
    ScreenID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
ALTER TABLE ObjectGroup ADD CONSTRAINT ObjectGroup_PK PRIMARY KEY
(
  ObjectGroupID
)
;

CREATE TABLE ObjectType
  (
    ObjectTypeID NUMBER NOT NULL ,
    ObjectTypeName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    AppID    NUMBER NOT NULL ,
    ActionId NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE ObjectType ADD CONSTRAINT ObjectType_PK PRIMARY KEY
(
  ObjectTypeID
)
;

CREATE TABLE Objects
  (
    ObjectID NUMBER NOT NULL ,
    ObjectName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    ObjectGroupID    NUMBER NOT NULL ,
    ObjectTypeID     NUMBER NOT NULL ,
    IdentifierTypeID NUMBER NOT NULL ,
    AppID            NUMBER NOT NULL ,
    Identifier NVARCHAR2 (4000) ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
CREATE INDEX Objects_APPLICATION_FK ON Objects
  ( ObjectID ASC
  ) ;
ALTER TABLE Objects ADD CONSTRAINT Objects_PK PRIMARY KEY
(
  ObjectID
)
;

CREATE TABLE Param
  (
    ParamID NUMBER NOT NULL ,
    ParamName NVARCHAR2 (200) ,
    Description NVARCHAR2 (200) ,
    SortOrder    NUMBER ,
    ParamGroupID NUMBER NOT NULL ,
    ObjectID     NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE Param ADD CONSTRAINT Parameter_PK PRIMARY KEY
(
  ParamID
)
;

CREATE TABLE ParamGroup
  (
    ParamGroupID NUMBER NOT NULL ,
    ParamGroupName NVARCHAR2 (200) ,
    Description NVARCHAR2 (200) ,
    Tag NVARCHAR2 (50) ,
    AppID          NUMBER NOT NULL ,
    TestScenarioID NUMBER NOT NULL ,
    TestCaseID     NUMBER NOT NULL ,
    TestStepID     NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE ParamGroup ADD CONSTRAINT ParamGroup_PK PRIMARY KEY
(
  ParamGroupID
)
;

CREATE TABLE Replacement_Strings
  (
    ID    NUMBER NOT NULL ,
    AppID NUMBER NOT NULL ,
    "Level" NVARCHAR2 (50) ,
    Foreign_ID NVARCHAR2 (50) ,
    Name NVARCHAR2 (500) ,
    Value NVARCHAR2 (500) ,
    ENCRYPTED NUMBER
  ) ;
ALTER TABLE Replacement_Strings ADD CONSTRAINT Replacement_Strings_PK PRIMARY KEY
(
  ID
)
;

CREATE TABLE Runner
  (
    RunnerID NUMBER NOT NULL ,
    RunnerName NVARCHAR2 (50) NOT NULL ,
    Description NVARCHAR2 (200) ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
ALTER TABLE Runner ADD CONSTRAINT Runner_PK PRIMARY KEY
(
  RunnerID
)
;

CREATE TABLE Scheduler
  (
    ScheduleID   NUMBER NOT NULL ,
    TestPlanID   NUMBER NOT NULL ,
    TestDataID   NUMBER NOT NULL ,
    ScheduleTime DATE ,
    Status       VARCHAR2 ,
    Frequency NVARCHAR2 (200) ,
    Notifications UNKNOWN
    --  ERROR: Datatype UNKNOWN is not allowed
    ,
    MultiLanes CHAR (1) NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE Scheduler ADD CONSTRAINT Scheduler_PK PRIMARY KEY
(
  ScheduleID
)
;

CREATE TABLE SchedulerLaneDetails
  (
    ScheduleID     NUMBER NOT NULL ,
    ScheduleLaneID NUMBER NOT NULL ,
    LaneType NVARCHAR2 (50) ,
    LaneUserName NVARCHAR2 (50) ,
    RunnerType NVARCHAR2 (100) ,
    Clones      NUMBER ,
    Iterations  NUMBER ,
    RampUpDelay NUMBER ,
    Duration    NUMBER
  ) ;
ALTER TABLE SchedulerLaneDetails ADD CONSTRAINT Lane_PK PRIMARY KEY
(
  ScheduleLaneID
)
;

CREATE TABLE SchedulerRunDetails
  (
    TestRunID  NUMBER NOT NULL ,
    TestPlanID NUMBER NOT NULL ,
    TestDataID NUMBER NOT NULL ,
    ScheduleID NUMBER NOT NULL ,
    Status     VARCHAR2 ,
    RunTime    DATE ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE SchedulerRunDetails ADD CONSTRAINT TestRunDetails_PK PRIMARY KEY
(
  TestRunID
)
;

CREATE TABLE Screen
  (
    ScreenID NUMBER NOT NULL ,
    ScreenName NVARCHAR2 (50) NOT NULL ,
    Description NVARCHAR2 (200) ,
    AppID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) NOT NULL ,
    CreatedDateTime DATE NOT NULL ,
    UpdatedBy NVARCHAR2 (100) NOT NULL ,
    UpdatedDateTime DATE NOT NULL
  ) ;
ALTER TABLE Screen ADD CONSTRAINT Screen_PK PRIMARY KEY
(
  ScreenID
)
;

CREATE TABLE Task
  (
    TaskID NUMBER NOT NULL ,
    LaneID NUMBER NOT NULL ,
    TaskName NVARCHAR2 (50) ,
    TestPlanXlsPath NVARCHAR2 (200) ,
    DataSet NVARCHAR2 (50) ,
    RepeatNo NUMBER ,
    TagsToRun NVARCHAR2 (200)
  ) ;
ALTER TABLE Task ADD CONSTRAINT Task_PK PRIMARY KEY
(
  TaskID
)
;

CREATE TABLE TaskResult
  (
    TaskResultID     NUMBER NOT NULL ,
    TaskID           NUMBER NOT NULL ,
    TaskPlanResultID NUMBER ,
    RunResultID NVARCHAR2 (500) ,
    ReportFilePath NVARCHAR2 (500)
  ) ;
ALTER TABLE TaskResult ADD CONSTRAINT TaskResult_PK PRIMARY KEY
(
  TaskResultID
)
;

CREATE TABLE TestCase
  (
    TestCaseID NUMBER NOT NULL ,
    ClassificationTag NVARCHAR2 (500) ,
    CaseName NVARCHAR2 (50) ,
    RunnerID NUMBER NOT NULL ,
    Description NVARCHAR2 (200) ,
    Active         CHAR (1) ,
    Positive       CHAR (1) ,
    SortOrder      NUMBER ,
    TestScenarioId NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
CREATE INDEX TestCase_TestScenario_FK ON TestCase
  ( TestCaseID ASC
  ) ;
ALTER TABLE TestCase ADD CONSTRAINT TestCase_PK PRIMARY KEY
(
  TestCaseID
)
;

CREATE TABLE TestCaseResult
  (
    TestCaseResultID  NUMBER NOT NULL ,
    TestCaseID        NUMBER NOT NULL ,
    TestSuiteResultID INTEGER ,
    Result            VARCHAR2 ,
    StartDateTime     DATE ,
    EndDateTime       DATE ,
    "Comment"         VARCHAR2 ,
    EXCEPTION         VARCHAR2 ,
    Request           VARCHAR2 ,
    Response          VARCHAR2
  ) ;
ALTER TABLE TestCaseResult ADD CONSTRAINT TestCaseResult__IDX PRIMARY KEY
(
  TestCaseResultID
)
;

CREATE TABLE TestConditionData
  (
    TestConditionDataID NUMBER NOT NULL ,
    TestDataID          NUMBER NOT NULL ,
    ConditionGroupID    NUMBER NOT NULL ,
    ConditionID         NUMBER NOT NULL ,
    ConditionValue NVARCHAR2 (200) ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
CREATE INDEX TestData_FK ON TestConditionData
  ( TestDataID ASC
  ) ;
CREATE INDEX TestCondition_FK ON TestConditionData
  ( ConditionID ASC
  ) ;
ALTER TABLE TestConditionData ADD CONSTRAINT TestCondData_PK PRIMARY KEY
(
  TestConditionDataID
)
;

CREATE TABLE TestData
  (
    TestDataID NUMBER NOT NULL ,
    AppID      NUMBER NOT NULL ,
    TestDataDescription NVARCHAR2 (200) ,
    Status VARCHAR2 ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE TestData ADD CONSTRAINT TestData_PK PRIMARY KEY
(
  TestDataID
)
;

CREATE TABLE TestParamData
  (
    TestParamDataID NUMBER NOT NULL ,
    ParamGroupID    NUMBER NOT NULL ,
    TestDataID      NUMBER NOT NULL ,
    ParamID         NUMBER NOT NULL ,
    ParamValue NVARCHAR2 (500) ,
    ValueBig BLOB ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
CREATE INDEX ParamGroup_FK ON TestParamData
  ( ParamGroupID ASC
  ) ;
CREATE INDEX TestData_FK ON TestParamData
  ( TestDataID ASC
  ) ;
ALTER TABLE TestParamData ADD CONSTRAINT TestParamData_PK PRIMARY KEY
(
  TestParamDataID
)
;

CREATE TABLE TestPlan
  (
    TestPlanID NUMBER NOT NULL ,
    PlanName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    TestSuiteID          NUMBER NOT NULL ,
    AppID                NUMBER NOT NULL ,
    PreConditionGroupID  NUMBER NOT NULL ,
    PostConditionGroupID NUMBER NOT NULL ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE TestPlan ADD CONSTRAINT TestPlan_PK PRIMARY KEY
(
  TestPlanID
)
;

CREATE TABLE TestPlanResult
  (
    TestPlanResultID NUMBER NOT NULL ,
    TestPlanID       NUMBER NOT NULL ,
    TestPlanRunName  VARCHAR2 ,
    StartDateTime    DATE ,
    EndDateTime      DATE ,
    StatusSummary    VARCHAR2
  ) ;
ALTER TABLE TestPlanResult ADD CONSTRAINT TestPlanResult__IDX PRIMARY KEY
(
  TestPlanResultID
)
;

CREATE TABLE TestScenario
  (
    TestScenarioID NUMBER NOT NULL ,
    TestScenarioName NVARCHAR2 (500) ,
    Description NVARCHAR2 (500) ,
    AppID       NUMBER NOT NULL ,
    TestSuiteId NUMBER NOT NULL ,
    SortOrder   NUMBER ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
-- Error - Index TestScenario_APPLICATION_FK has no columns
ALTER TABLE TestScenario ADD CONSTRAINT TestScenario_PK PRIMARY KEY
(
  TestScenarioID
)
;

CREATE TABLE TestStep
  (
    TestStepID NUMBER NOT NULL ,
    StepName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    TestStepType NVARCHAR2 (100) ,
    ActionID             NUMBER NOT NULL ,
    Active               CHAR (1) ,
    SortOrder            NUMBER ,
    PreConditionGroupID  NUMBER NOT NULL ,
    PostConditionGroupID NUMBER NOT NULL ,
    InputParamGroupID    NUMBER NOT NULL ,
    OutputParamGroupID   NUMBER NOT NULL ,
    TestCaseID           NUMBER NOT NULL ,
    RunnerID             NUMBER NOT NULL ,
    ExpectedResult NVARCHAR2 (50) ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE TestStep ADD CONSTRAINT TestStep_PK PRIMARY KEY
(
  TestStepID
)
;

CREATE TABLE TestStepResult
  (
    TestStepResultID NUMBER NOT NULL ,
    TestStepID       NUMBER NOT NULL ,
    TestCaseResultID NUMBER ,
    Result           VARCHAR2 ,
    StartTime        DATE ,
    EndTime          DATE ,
    "Comment"        VARCHAR2 ,
    EXCEPTION        VARCHAR2 ,
    Request          VARCHAR2 ,
    Response         VARCHAR2
  ) ;
ALTER TABLE TestStepResult ADD CONSTRAINT TestStepResult__IDX PRIMARY KEY
(
  TestStepResultID
)
;

CREATE TABLE TestSuite
  (
    TestSuiteID NUMBER NOT NULL ,
    SuiteName NVARCHAR2 (50) ,
    Description NVARCHAR2 (200) ,
    AppID        NUMBER NOT NULL ,
    FunctionalID NUMBER NOT NULL ,
    FeatureID    NUMBER NOT NULL ,
    SortOrder    CHAR (1) ,
    CreatedBy NVARCHAR2 (100) ,
    CreatedDateTime DATE ,
    UpdatedBy NVARCHAR2 (100) ,
    UpdatedDateTime DATE
  ) ;
ALTER TABLE TestSuite ADD CONSTRAINT TestSuite_PK PRIMARY KEY
(
  TestSuiteID
)
;

CREATE TABLE TestSuiteResult
  (
    TestSuiteResultID NUMBER NOT NULL ,
    TestSuiteID       NUMBER NOT NULL ,
    TestPlanResultID  NUMBER ,
    Result            VARCHAR2 ,
    StartDateTime     DATE ,
    EndDateTime       DATE ,
    PercPassCount     NUMBER ,
    PercFailCount     NUMBER ,
    PercSkipCount     NUMBER
  ) ;
ALTER TABLE TestSuiteResult ADD CONSTRAINT TestSuiteResult__IDX PRIMARY KEY
(
  TestSuiteResultID
)
;

ALTER TABLE TestPlan ADD CONSTRAINT AppID FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE ConditionGroup ADD CONSTRAINT ConditionGroup_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE Conditions ADD CONSTRAINT Condition_ConditionGroup_FK FOREIGN KEY ( ConditionGroupID ) REFERENCES ConditionGroup ( ConditionGroupID ) ;

ALTER TABLE AppFeature ADD CONSTRAINT Feature_Functional_FK FOREIGN KEY ( FunctionalID ) REFERENCES AppFunctionality ( FunctionalID ) ON
DELETE CASCADE ;

ALTER TABLE AppFunctionality ADD CONSTRAINT Functional_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ON
DELETE CASCADE ;

ALTER TABLE IdentifierType ADD CONSTRAINT IdentifierType_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE ObjectGroup ADD CONSTRAINT ObjectGroup_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE ObjectGroup ADD CONSTRAINT ObjectGroup_Screen_FK FOREIGN KEY ( ScreenID ) REFERENCES Screen ( ScreenID ) ;

ALTER TABLE ObjectType ADD CONSTRAINT ObjectType_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE ObjectType ADD CONSTRAINT ObjectType_Actions_FK FOREIGN KEY ( ActionId ) REFERENCES Actions ( ActionID ) ;

ALTER TABLE Objects ADD CONSTRAINT Objects_Application_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE Objects ADD CONSTRAINT Objects_IdentifierType_FK FOREIGN KEY ( IdentifierTypeID ) REFERENCES IdentifierType ( IdentifierTypeID ) ;

ALTER TABLE Objects ADD CONSTRAINT Objects_ObjectGroup_FK FOREIGN KEY ( ObjectGroupID ) REFERENCES ObjectGroup ( ObjectGroupID ) ON
DELETE CASCADE ;

ALTER TABLE Objects ADD CONSTRAINT Objects_ObjectType_FK FOREIGN KEY ( ObjectTypeID ) REFERENCES ObjectType ( ObjectTypeID ) ;

ALTER TABLE ParamGroup ADD CONSTRAINT ParamGroup_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE ParamGroup ADD CONSTRAINT ParamGroup_TestCase_FK FOREIGN KEY ( TestCaseID ) REFERENCES TestCase ( TestCaseID ) ;

ALTER TABLE ParamGroup ADD CONSTRAINT ParamGroup_TestScenario_FK FOREIGN KEY ( TestScenarioID ) REFERENCES TestScenario ( TestScenarioID ) ;

ALTER TABLE ParamGroup ADD CONSTRAINT ParamGroup_TestStep_FK FOREIGN KEY ( TestStepID ) REFERENCES TestStep ( TestStepID ) ;

ALTER TABLE Param ADD CONSTRAINT Parameter_Objects_FK FOREIGN KEY ( ObjectID ) REFERENCES Objects ( ObjectID ) ;

ALTER TABLE Param ADD CONSTRAINT Parameter_ParamGroup_FK FOREIGN KEY ( ParamGroupID ) REFERENCES ParamGroup ( ParamGroupID ) ON
DELETE CASCADE ;

--  ERROR: FK name length exceeds maximum allowed length(30)
ALTER TABLE Replacement_Strings ADD CONSTRAINT Replacement_Strings_Application_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

--  ERROR: FK name length exceeds maximum allowed length(30)
ALTER TABLE SchedulerLaneDetails ADD CONSTRAINT SchedulerLaneDetails_Scheduler_FK FOREIGN KEY ( ScheduleID ) REFERENCES Scheduler ( ScheduleID ) ;

--  ERROR: FK name length exceeds maximum allowed length(30)
ALTER TABLE SchedulerRunDetails ADD CONSTRAINT SchedulerRunDetails_Scheduler_FK FOREIGN KEY ( ScheduleID ) REFERENCES Scheduler ( ScheduleID ) ;

--  ERROR: FK name length exceeds maximum allowed length(30)
ALTER TABLE SchedulerRunDetails ADD CONSTRAINT SchedulerRunDetails_TestData_FK FOREIGN KEY ( TestDataID ) REFERENCES TestData ( TestDataID ) ;

--  ERROR: FK name length exceeds maximum allowed length(30)
ALTER TABLE SchedulerRunDetails ADD CONSTRAINT SchedulerRunDetails_TestPlan_FK FOREIGN KEY ( TestPlanID ) REFERENCES TestPlan ( TestPlanID ) ;

ALTER TABLE Scheduler ADD CONSTRAINT Scheduler_TestData_FK FOREIGN KEY ( TestDataID ) REFERENCES TestData ( TestDataID ) ;

ALTER TABLE Scheduler ADD CONSTRAINT Scheduler_TestPlan_FK FOREIGN KEY ( TestPlanID ) REFERENCES TestPlan ( TestPlanID ) ;

ALTER TABLE Screen ADD CONSTRAINT Screen_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE Task ADD CONSTRAINT TABLE_32_Lane_FK FOREIGN KEY ( LaneID ) REFERENCES SchedulerLaneDetails ( ScheduleLaneID ) ;

ALTER TABLE TaskResult ADD CONSTRAINT TABLE_33_Task_FK FOREIGN KEY ( TaskID ) REFERENCES Task ( TaskID ) ;

ALTER TABLE LaneResults ADD CONSTRAINT DDTLaneResults_AgentDetails_FK FOREIGN KEY ( AgentID ) REFERENCES AgentDetails ( AgentID ) ;

ALTER TABLE LaneResults ADD CONSTRAINT DDTLaneResults_Lane_FK FOREIGN KEY ( ScheduleLaneID ) REFERENCES SchedulerLaneDetails ( ScheduleLaneID ) ;

ALTER TABLE TestCaseResult ADD CONSTRAINT TestCaseResult_TestCase_FK FOREIGN KEY ( TestCaseID ) REFERENCES TestCase ( TestCaseID ) ;

ALTER TABLE TestCase ADD CONSTRAINT TestCase_Runner_FK FOREIGN KEY ( RunnerID ) REFERENCES Runner ( RunnerID ) ;

ALTER TABLE TestCase ADD CONSTRAINT TestCase_TestScenario_FK FOREIGN KEY ( TestScenarioId ) REFERENCES TestScenario ( TestScenarioID ) ;

ALTER TABLE TestConditionData ADD CONSTRAINT TestCondData_ConditionGroup_FK FOREIGN KEY ( ConditionGroupID ) REFERENCES ConditionGroup ( ConditionGroupID ) ;

ALTER TABLE TestConditionData ADD CONSTRAINT TestCondData_Conditions_FK FOREIGN KEY ( ConditionID ) REFERENCES Conditions ( ConditionID ) ;

ALTER TABLE TestConditionData ADD CONSTRAINT TestCondData_TestData_FK FOREIGN KEY ( TestDataID ) REFERENCES TestData ( TestDataID ) ;

ALTER TABLE TestData ADD CONSTRAINT TestData_Application_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE TestParamData ADD CONSTRAINT TestParamData_ParamGroup_FK FOREIGN KEY ( ParamGroupID ) REFERENCES ParamGroup ( ParamGroupID ) ;

ALTER TABLE TestParamData ADD CONSTRAINT TestParamData_TestData_FK FOREIGN KEY ( TestDataID ) REFERENCES TestData ( TestDataID ) ;

ALTER TABLE TestPlanResult ADD CONSTRAINT TestPlanResult_TestPlan_FK FOREIGN KEY ( TestPlanID ) REFERENCES TestPlan ( TestPlanID ) ;

ALTER TABLE TestPlan ADD CONSTRAINT TestPlan_ConditionGroup_FK FOREIGN KEY ( PreConditionGroupID ) REFERENCES ConditionGroup ( ConditionGroupID ) ;

ALTER TABLE TestPlan ADD CONSTRAINT TestPlan_ConditionGroup_FKv2 FOREIGN KEY ( PostConditionGroupID ) REFERENCES ConditionGroup ( ConditionGroupID ) ;

ALTER TABLE TestPlan ADD CONSTRAINT TestPlan_TestSuite_FK FOREIGN KEY ( TestSuiteID ) REFERENCES TestSuite ( TestSuiteID ) ;

ALTER TABLE TestScenario ADD CONSTRAINT TestScenario_Application_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE TestScenario ADD CONSTRAINT TestScenario_TestSuite_FK FOREIGN KEY ( TestSuiteId ) REFERENCES TestSuite ( TestSuiteID ) ;

ALTER TABLE TestStepResult ADD CONSTRAINT TestStepResult_TestStep_FK FOREIGN KEY ( TestStepID ) REFERENCES TestStep ( TestStepID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_Actions_FK FOREIGN KEY ( ActionID ) REFERENCES Actions ( ActionID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_ConditionGroup_FK FOREIGN KEY ( PreConditionGroupID ) REFERENCES ConditionGroup ( ConditionGroupID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_ConditionGroup_FKv1 FOREIGN KEY ( PostConditionGroupID ) REFERENCES ConditionGroup ( ConditionGroupID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_ParamGroup_FK FOREIGN KEY ( InputParamGroupID ) REFERENCES ParamGroup ( ParamGroupID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_ParamGroup_FKv1 FOREIGN KEY ( OutputParamGroupID ) REFERENCES ParamGroup ( ParamGroupID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_Runner_FK FOREIGN KEY ( RunnerID ) REFERENCES Runner ( RunnerID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_Runner_FKv1 FOREIGN KEY ( RunnerID ) REFERENCES Runner ( RunnerID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_TestCase_FK FOREIGN KEY ( TestCaseID ) REFERENCES TestCase ( TestCaseID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_TestCase_FKv1 FOREIGN KEY ( TestCaseID ) REFERENCES TestCase ( TestCaseID ) ;

ALTER TABLE TestStep ADD CONSTRAINT TestStep_TestStep_FK FOREIGN KEY ( TestStepID ) REFERENCES TestStep ( TestStepID ) ;

ALTER TABLE TestSuiteResult ADD CONSTRAINT TestSuiteResult_TestSuite_FK FOREIGN KEY ( TestSuiteID ) REFERENCES TestSuite ( TestSuiteID ) ;

ALTER TABLE TestSuite ADD CONSTRAINT TestSuite_APPLICATION_FK FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ON
DELETE CASCADE ;

ALTER TABLE TestSuite ADD CONSTRAINT TestSuite_Application_FKv1 FOREIGN KEY ( AppID ) REFERENCES Application ( AppID ) ;

ALTER TABLE TestSuite ADD CONSTRAINT TestSuite_Feature_FK FOREIGN KEY ( FeatureID ) REFERENCES AppFeature ( FeatureID ) ;

ALTER TABLE TestSuite ADD CONSTRAINT TestSuite_Functional_FK FOREIGN KEY ( FunctionalID ) REFERENCES AppFunctionality ( FunctionalID ) ;


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            35
-- CREATE INDEX                             7
-- ALTER TABLE                             98
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   7
-- WARNINGS                                 0
